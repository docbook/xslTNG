<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.jenitennison.com/xslt/xspec"
         xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/main.xspec"
         stylesheet="file:/home/runner/work/xslTNG/xslTNG/build/xslt/xspec-driver.xsl"
         date="2023-01-25T13:41:33.983705Z">
   <scenario id="scenario1"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/copyright.xspec">
      <label>when formatting a single copyright year</label>
      <input-wrap xmlns="">
         <x:call xmlns:db="http://docbook.org/ns/docbook"
                  xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="fp:collapse-years">
            <x:param as="element()+">
               <db:year>1999</db:year>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="copyright-years">
               <span class="year">1999</span>
            </span>
         </content-wrap>
      </result>
      <test id="scenario1-expect1" successful="true">
         <label>a single year</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      xmlns:db="http://docbook.org/ns/docbook"
                      xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                      xmlns:x="http://www.jenitennison.com/xslt/xspec"
                      class="copyright-years">
                  <span class="year">1999</span>
               </span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario2"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/copyright.xspec">
      <label>when formatting a single copyright year range</label>
      <input-wrap xmlns="">
         <x:call xmlns:db="http://docbook.org/ns/docbook"
                  xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="fp:collapse-years">
            <x:param as="element()+">
               <db:year>1999</db:year>
               <db:year>2000</db:year>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="copyright-years">
               <span class="year">1999</span>–<span class="year">2000</span>
            </span>
         </content-wrap>
      </result>
      <test id="scenario2-expect1" successful="true">
         <label>a single range</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      xmlns:db="http://docbook.org/ns/docbook"
                      xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                      xmlns:x="http://www.jenitennison.com/xslt/xspec"
                      class="copyright-years">
                  <span class="year">1999</span>–<span class="year">2000</span>
               </span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario3"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/copyright.xspec">
      <label>when formatting a year range and a non-range year</label>
      <input-wrap xmlns="">
         <x:call xmlns:db="http://docbook.org/ns/docbook"
                  xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="fp:collapse-years">
            <x:param as="element()+">
               <db:year>1999</db:year>
               <db:year>2000</db:year>
               <db:year>2020</db:year>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="copyright-years">
               <span class="year">1999</span>–<span class="year">2000</span>, <span class="year">2020</span>
            </span>
         </content-wrap>
      </result>
      <test id="scenario3-expect1" successful="true">
         <label>a range and a year</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      xmlns:db="http://docbook.org/ns/docbook"
                      xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                      xmlns:x="http://www.jenitennison.com/xslt/xspec"
                      class="copyright-years">
                  <span class="year">1999</span>–<span class="year">2000</span>, <span class="year">2020</span>
               </span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario4"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/copyright.xspec">
      <label>when formatting two ranges</label>
      <input-wrap xmlns="">
         <x:call xmlns:db="http://docbook.org/ns/docbook"
                  xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="fp:collapse-years">
            <x:param as="element()+">
               <db:year>1999</db:year>
               <db:year>2000</db:year>
               <db:year>2001</db:year>
               <db:year>2002</db:year>
               <db:year>2015</db:year>
               <db:year>2016</db:year>
               <db:year>2017</db:year>
               <db:year>2018</db:year>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="copyright-years">
               <span class="year">1999</span>–<span class="year">2002</span>, <span class="year">2015</span>–<span class="year">2018</span>
            </span>
         </content-wrap>
      </result>
      <test id="scenario4-expect1" successful="true">
         <label>two ranges</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      xmlns:db="http://docbook.org/ns/docbook"
                      xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                      xmlns:x="http://www.jenitennison.com/xslt/xspec"
                      class="copyright-years">
                  <span class="year">1999</span>–<span class="year">2002</span>, <span class="year">2015</span>–<span class="year">2018</span>
               </span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario5"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/copyright.xspec">
      <label>a range interrupted</label>
      <input-wrap xmlns="">
         <x:call xmlns:db="http://docbook.org/ns/docbook"
                  xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="fp:collapse-years">
            <x:param as="element()+">
               <db:year>2000</db:year>
               <db:year>2001</db:year>
               <db:year>2002</db:year>
               <db:year>2003</db:year>
               <db:year>2004</db:year>
               <db:year>2006</db:year>
               <db:year>2007</db:year>
               <db:year>2008</db:year>
               <db:year>2009</db:year>
               <db:year>2010</db:year>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="copyright-years">
               <span class="year">2000</span>–<span class="year">2004</span>, <span class="year">2006</span>–<span class="year">2010</span>
            </span>
         </content-wrap>
      </result>
      <test id="scenario5-expect1" successful="true">
         <label>two ranges</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      xmlns:db="http://docbook.org/ns/docbook"
                      xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                      xmlns:x="http://www.jenitennison.com/xslt/xspec"
                      class="copyright-years">
                  <span class="year">2000</span>–<span class="year">2004</span>, <span class="year">2006</span>–<span class="year">2010</span>
               </span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario6"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/copyright.xspec">
      <label>a range interrupted by a non-numeric year</label>
      <input-wrap xmlns="">
         <x:call xmlns:db="http://docbook.org/ns/docbook"
                  xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="fp:collapse-years">
            <x:param as="element()+">
               <db:year>2000</db:year>
               <db:year>2001</db:year>
               <db:year>2002</db:year>
               <db:year>2003</db:year>
               <db:year>2004</db:year>
               <db:year>Spoon!</db:year>
               <db:year>2006</db:year>
               <db:year>2007</db:year>
               <db:year>2008</db:year>
               <db:year>2009</db:year>
               <db:year>2010</db:year>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="copyright-years">
               <span class="year">2000</span>–<span class="year">2004</span>, <span class="year">Spoon!</span>, <span class="year">2006</span>–<span class="year">2010</span>
            </span>
         </content-wrap>
      </result>
      <test id="scenario6-expect1" successful="true">
         <label>two ranges</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      xmlns:db="http://docbook.org/ns/docbook"
                      xmlns:fp="http://docbook.org/ns/docbook/functions/private"
                      xmlns:x="http://www.jenitennison.com/xslt/xspec"
                      class="copyright-years">
                  <span class="year">2000</span>–<span class="year">2004</span>, <span class="year">Spoon!</span>, <span class="year">2006</span>–<span class="year">2010</span>
               </span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario7"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/dates.xspec">
      <label>When transforming a date of 'today'</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:db="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/dates.001.xml"
                     mode="m:docbook"
                     select="//db:para[@xml:id='today']/db:date"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="date">Today</span>
         </content-wrap>
      </result>
      <test id="scenario7-expect1" successful="true">
         <label>expect a verbatim copy</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml" class="date">Today</span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario8"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/dates.xspec">
      <label>When transforming an ISO 8601 date</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:db="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/dates.001.xml"
                     mode="m:docbook"
                     select="//db:para[@xml:id='date']/db:date"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="date" time="2020-05-08">08 May 2020</span>
         </content-wrap>
      </result>
      <test id="scenario8-expect1" successful="true">
         <label>expect a formatted date</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml" class="date" time="2020-05-08">08 May 2020</span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario9"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/dates.xspec">
      <label>When transforming an ISO 8601 date time in the morning</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:db="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/dates.001.xml"
                     mode="m:docbook"
                     select="//db:para[@xml:id='amtime']/db:date"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml"
                   class="date"
                   time="2020-05-08T06:49:00Z">06:49 08 May 2020</span>
         </content-wrap>
      </result>
      <test id="scenario9-expect1" successful="true">
         <label>expect formatted date time</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      class="date"
                      time="2020-05-08T06:49:00Z">06:49 08 May 2020</span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario10"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/dates.xspec">
      <label>When transforming an ISO 8601 date time in the afternoon</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:db="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/dates.001.xml"
                     mode="m:docbook"
                     select="//db:para[@xml:id='pmtime']/db:date"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml"
                   class="date"
                   time="2020-05-08T16:49:00Z">16:49 08 May 2020</span>
         </content-wrap>
      </result>
      <test id="scenario10-expect1" successful="true">
         <label>expect a formatted date time</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      class="date"
                      time="2020-05-08T16:49:00Z">16:49 08 May 2020</span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario11"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/dates.xspec">
      <label>When transforming a date time with a custom format</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:db="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/dates.001.xml"
                     mode="m:docbook"
                     select="//db:para[@xml:id='dtformat']/db:date"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml"
                   class="date"
                   time="2020-05-08T16:49:00Z">At 4:49p.m. on Friday, May 8, 2020</span>
         </content-wrap>
      </result>
      <test id="scenario11-expect1" successful="true">
         <label>expect the custom format to be used</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <span xmlns="http://www.w3.org/1999/xhtml"
                      class="date"
                      time="2020-05-08T16:49:00Z">At 4:49p.m. on Friday, May 8, 2020</span>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario12"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/dates.xspec">
      <label>When transforming a french date with a custom format</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:db="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/dates.001.xml"
                     mode="m:docbook"
                     select="//db:para[@xml:id='dtformat-fr']/db:date"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml"
                   lang="fr"
                   class="date"
                   time="2020-05-08T16:49:00Z">4:49p.m. / Friday, May 8, 2020</span>
         </content-wrap>
      </result>
      <test id="scenario12-expect1" successful="true">
         <label>expect the result to be in French (maybe)</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:db="http://docbook.org/ns/docbook"
                       xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="(starts-with(system-property('xsl:product-version'), 'HE')                    and string(.) = '4:49p.m. / Friday, May 8, 2020')                   or (string(.) = '4:49p.m. / Vendredi, Mai 8, 2020') "/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario13"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/funcsynopsis.xspec">
      <label>When transforming short funcsynopsis elements in ANSI mode</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/funcsynopsis.001.xml"
                     mode="m:docbook"
                     select="//*[@xml:id='ansi1']"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="ansi1" class="funcsynopsis">
               <div class="pre-wrap">
                  <pre class="funcsynopsisinfo verbatim">
                     <code>#include &lt;varargs.h&gt;</code>
                  </pre>
               </div>
               <div class="funcprototype">
                  <span class="funcdef">
                     <span class="type">float</span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                     <span class="function">rand</span>
                  </span>
                  <span class="arglist">(<span class="void">void</span>);</span>
               </div>
               <div class="funcprototype">
                  <span class="funcdef">int <span class="function">max</span>
                  </span>
                  <span class="arglist">(<span class="varargs">...</span>);</span>
               </div>
               <div class="funcprototype">
                  <span class="funcdef">int <span class="function">idiv</span>
                  </span>
                  <span class="arglist">(<span>
                        <span class="type">int</span>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                        <span class="parameter">n</span>
                        <span>, </span>
                     </span>
                     <span>
                        <span class="type">int</span>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                        <span class="parameter">m</span>
                     </span>);</span>
               </div>
            </div>
         </content-wrap>
      </result>
      <test id="scenario13-expect1" successful="true">
         <label>expect non-tabular ANSI output</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="ansi1" class="funcsynopsis">
                  <div class="pre-wrap">
                     <pre class="funcsynopsisinfo verbatim">
                        <code>#include &lt;varargs.h&gt;</code>
                     </pre>
                  </div>
                  <div class="funcprototype">
                     <span class="funcdef">
                        <span class="type">float</span>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                        <span class="function">rand</span>
                     </span>
                     <span class="arglist">(<span class="void">void</span>);</span>
                  </div>
                  <div class="funcprototype">
                     <span class="funcdef">int <span class="function">max</span>
                     </span>
                     <span class="arglist">(<span class="varargs">...</span>);</span>
                  </div>
                  <div class="funcprototype">
                     <span class="funcdef">int <span class="function">idiv</span>
                     </span>
                     <span class="arglist">(<span>
                           <span class="type">int</span>
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                           <span class="parameter">n</span>
                           <span>, </span>
                        </span>
                        <span>
                           <span class="type">int</span>
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                           <span class="parameter">m</span>
                        </span>);</span>
                  </div>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario14"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/funcsynopsis.xspec">
      <label>When transforming longer funcsynopsis elements in ANSI mode</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/funcsynopsis.001.xml"
                     mode="m:docbook"
                     select="//*[@xml:id='ansi2']"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="ansi2" class="funcsynopsis">
               <div class="funcprototype">
                  <table class="prototype">
                     <tbody>
                        <tr>
                           <td>
                              <span class="funcdef">void <span class="function">qsort</span>
                              </span>(</td>
                           <td class="paramdef">void *<span class="parameter">dataptr</span>[],</td>
                        </tr>
                        <tr>
                           <td rowspan="3"/>
                           <td class="paramdef">int <span class="parameter">left</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">int <span class="parameter">right</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">
                              <span class="type">int</span>  (*<span class="parameter">comp</span>)
      (<span class="funcparams">void *, void *</span>));</td>
                        </tr>
                     </tbody>
                  </table>
               </div>
            </div>
         </content-wrap>
      </result>
      <test id="scenario14-expect1" successful="true">
         <label>expect tabular ANSI output</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="ansi2" class="funcsynopsis">
                  <div class="funcprototype">
                     <table class="prototype">
                        <tbody>
                           <tr>
                              <td>
                                 <span class="funcdef">void <span class="function">qsort</span>
                                 </span>(</td>
                              <td class="paramdef">void *<span class="parameter">dataptr</span>[],</td>
                           </tr>
                           <tr>
                              <td rowspan="3"/>
                              <td class="paramdef">int <span class="parameter">left</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">int <span class="parameter">right</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">
                                 <span class="type">int</span>  (*<span class="parameter">comp</span>)
      (<span class="funcparams">void *, void *</span>));</td>
                           </tr>
                        </tbody>
                     </table>
                  </div>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario15"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/funcsynopsis.xspec">
      <label>When transforming long funcsynopsis elements in ANSI mode</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/funcsynopsis.001.xml"
                     mode="m:docbook"
                     select="//*[@xml:id='ansi3']"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="ansi3" class="funcsynopsis">
               <div class="funcprototype">
                  <table class="prototype">
                     <tbody>
                        <tr>
                           <td>
                              <span class="funcdef">int <span class="function">foo_frob_something</span>
                              </span>(</td>
                           <td class="paramdef">foo_sometype1 <span class="parameter">foo_frob_parm1</span>,</td>
                        </tr>
                        <tr>
                           <td rowspan="4"/>
                           <td class="paramdef">foo_sometype1 <span class="parameter">foo_frob_parm2</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">foo_sometype1 <span class="parameter">foo_frob_parm3</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">int (*<span class="parameter">parm4</span>)
      (<span class="funcparams">int a, int b, int c</span>),</td>
                        </tr>
                        <tr>
                           <td class="paramdef">foo_sometype1 <span class="parameter">foo_frob_parm5</span>);</td>
                        </tr>
                     </tbody>
                  </table>
               </div>
            </div>
         </content-wrap>
      </result>
      <test id="scenario15-expect1" successful="true">
         <label>expect tabular ANSI output</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="ansi3" class="funcsynopsis">
                  <div class="funcprototype">
                     <table class="prototype">
                        <tbody>
                           <tr>
                              <td>
                                 <span class="funcdef">int <span class="function">foo_frob_something</span>
                                 </span>(</td>
                              <td class="paramdef">foo_sometype1 <span class="parameter">foo_frob_parm1</span>,</td>
                           </tr>
                           <tr>
                              <td rowspan="4"/>
                              <td class="paramdef">foo_sometype1 <span class="parameter">foo_frob_parm2</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">foo_sometype1 <span class="parameter">foo_frob_parm3</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">int (*<span class="parameter">parm4</span>)
      (<span class="funcparams">int a, int b, int c</span>),</td>
                           </tr>
                           <tr>
                              <td class="paramdef">foo_sometype1 <span class="parameter">foo_frob_parm5</span>);</td>
                           </tr>
                        </tbody>
                     </table>
                  </div>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario16"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/funcsynopsis.xspec">
      <label>When transforming short funcsynopsis elements in K&amp;R mode</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/funcsynopsis.001.xml"
                     mode="m:docbook"
                     select="//*[@xml:id='kr1']"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="kr1" class="funcsynopsis">
               <div class="pre-wrap">
                  <pre class="funcsynopsisinfo verbatim">
                     <code>#include &lt;varargs.h&gt;</code>
                  </pre>
               </div>
               <div class="funcprototype">
                  <div>
                     <span class="funcdef">
                        <span class="type">float</span>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                        <span class="function">rand</span>
                     </span>
                     <span class="arglist">(<span class="void"/>);</span>
                  </div>
               </div>
               <div class="funcprototype">
                  <div>
                     <span class="funcdef">int <span class="function">max</span>
                     </span>
                     <span class="arglist">(<span class="varargs">...</span>);</span>
                  </div>
               </div>
               <div class="funcprototype">
                  <div>
                     <span class="funcdef">int <span class="function">idiv</span>
                     </span>
                     <span class="arglist">(<span>
                           <span class="parameter">n</span>
                           <span>, </span>
                        </span>
                        <span>
                           <span class="parameter">m</span>
                        </span>);</span>
                  </div>
                  <div class="paramdef">
                     <span class="type">int</span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                     <span class="parameter">n</span>;</div>
                  <div class="paramdef">
                     <span class="type">int</span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                     <span class="parameter">m</span>;</div>
               </div>
            </div>
         </content-wrap>
      </result>
      <test id="scenario16-expect1" successful="true">
         <label>expect non-tabular K&amp;R output</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="kr1" class="funcsynopsis">
                  <div class="pre-wrap">
                     <pre class="funcsynopsisinfo verbatim">
                        <code>#include &lt;varargs.h&gt;</code>
                     </pre>
                  </div>
                  <div class="funcprototype">
                     <div>
                        <span class="funcdef">
                           <span class="type">float</span>
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                           <span class="function">rand</span>
                        </span>
                        <span class="arglist">(<span class="void"/>);</span>
                     </div>
                  </div>
                  <div class="funcprototype">
                     <div>
                        <span class="funcdef">int <span class="function">max</span>
                        </span>
                        <span class="arglist">(<span class="varargs">...</span>);</span>
                     </div>
                  </div>
                  <div class="funcprototype">
                     <div>
                        <span class="funcdef">int <span class="function">idiv</span>
                        </span>
                        <span class="arglist">(<span>
                              <span class="parameter">n</span>
                              <span>, </span>
                           </span>
                           <span>
                              <span class="parameter">m</span>
                           </span>);</span>
                     </div>
                     <div class="paramdef">
                        <span class="type">int</span>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                        <span class="parameter">n</span>;</div>
                     <div class="paramdef">
                        <span class="type">int</span>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                        <span class="parameter">m</span>;</div>
                  </div>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario17"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/funcsynopsis.xspec">
      <label>When transforming longer funcsynopsis elements in K&amp;R mode</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/funcsynopsis.001.xml"
                     mode="m:docbook"
                     select="//*[@xml:id='kr2']"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="kr2" class="funcsynopsis">
               <div class="funcprototype">
                  <table class="prototype">
                     <tbody>
                        <tr>
                           <td>
                              <span class="funcdef">void <span class="function">qsort</span>
                              </span>(</td>
                           <td class="paramdef">
                              <span class="parameter">dataptr</span>,</td>
                        </tr>
                        <tr>
                           <td rowspan="3"/>
                           <td class="paramdef">
                              <span class="parameter">left</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">
                              <span class="parameter">right</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">
                              <span class="parameter">comp</span>);</td>
                        </tr>
                     </tbody>
                  </table>
                  <table class="params">
                     <tbody>
                        <tr class="paramdef">
                           <td>void *</td>
                           <td>
                              <span class="parameter">dataptr</span>[]</td>
                        </tr>
                        <tr class="paramdef">
                           <td>int </td>
                           <td>
                              <span class="parameter">left</span>
                           </td>
                        </tr>
                        <tr class="paramdef">
                           <td>int </td>
                           <td>
                              <span class="parameter">right</span>
                           </td>
                        </tr>
                        <tr class="paramdef">
                           <td>
                              <span class="type">int</span>  (*<span class="parameter">comp</span>)
      </td>
                           <td>(<span class="funcparams">void *, void *</span>)</td>
                        </tr>
                     </tbody>
                  </table>
               </div>
            </div>
         </content-wrap>
      </result>
      <test id="scenario17-expect1" successful="true">
         <label>expect tabular K&amp;R output</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="kr2" class="funcsynopsis">
                  <div class="funcprototype">
                     <table class="prototype">
                        <tbody>
                           <tr>
                              <td>
                                 <span class="funcdef">void <span class="function">qsort</span>
                                 </span>(</td>
                              <td class="paramdef">
                                 <span class="parameter">dataptr</span>,</td>
                           </tr>
                           <tr>
                              <td rowspan="3"/>
                              <td class="paramdef">
                                 <span class="parameter">left</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">
                                 <span class="parameter">right</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">
                                 <span class="parameter">comp</span>);</td>
                           </tr>
                        </tbody>
                     </table>
                     <table class="params">
                        <tbody>
                           <tr class="paramdef">
                              <td>void *</td>
                              <td>
                                 <span class="parameter">dataptr</span>[]</td>
                           </tr>
                           <tr class="paramdef">
                              <td>int </td>
                              <td>
                                 <span class="parameter">left</span>
                              </td>
                           </tr>
                           <tr class="paramdef">
                              <td>int </td>
                              <td>
                                 <span class="parameter">right</span>
                              </td>
                           </tr>
                           <tr class="paramdef">
                              <td>
                                 <span class="type">int</span>  (*<span class="parameter">comp</span>)
      </td>
                              <td>(<span class="funcparams">void *, void *</span>)</td>
                           </tr>
                        </tbody>
                     </table>
                  </div>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario18"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/funcsynopsis.xspec">
      <label>When transforming long funcsynopsis elements in K&amp;R mode</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/funcsynopsis.001.xml"
                     mode="m:docbook"
                     select="//*[@xml:id='kr3']"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="kr3" class="funcsynopsis">
               <div class="funcprototype">
                  <table class="prototype">
                     <tbody>
                        <tr>
                           <td>
                              <span class="funcdef">int <span class="function">foo_frob_something</span>
                              </span>(</td>
                           <td class="paramdef">
                              <span class="parameter">foo_frob_parm1</span>,</td>
                        </tr>
                        <tr>
                           <td rowspan="4"/>
                           <td class="paramdef">
                              <span class="parameter">foo_frob_parm2</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">
                              <span class="parameter">foo_frob_parm3</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">
                              <span class="parameter">parm4</span>,</td>
                        </tr>
                        <tr>
                           <td class="paramdef">
                              <span class="parameter">foo_frob_parm5</span>);</td>
                        </tr>
                     </tbody>
                  </table>
                  <table class="params">
                     <tbody>
                        <tr class="paramdef">
                           <td>foo_sometype1 </td>
                           <td>
                              <span class="parameter">foo_frob_parm1</span>
                           </td>
                        </tr>
                        <tr class="paramdef">
                           <td>foo_sometype1 </td>
                           <td>
                              <span class="parameter">foo_frob_parm2</span>
                           </td>
                        </tr>
                        <tr class="paramdef">
                           <td>foo_sometype1 </td>
                           <td>
                              <span class="parameter">foo_frob_parm3</span>
                           </td>
                        </tr>
                        <tr class="paramdef">
                           <td>int (*<span class="parameter">parm4</span>)
      </td>
                           <td>(<span class="funcparams">int a, int b, int c</span>)</td>
                        </tr>
                        <tr class="paramdef">
                           <td>foo_sometype1 </td>
                           <td>
                              <span class="parameter">foo_frob_parm5</span>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </div>
            </div>
         </content-wrap>
      </result>
      <test id="scenario18-expect1" successful="true">
         <label>expect tabular K&amp;R output</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="kr3" class="funcsynopsis">
                  <div class="funcprototype">
                     <table class="prototype">
                        <tbody>
                           <tr>
                              <td>
                                 <span class="funcdef">int <span class="function">foo_frob_something</span>
                                 </span>(</td>
                              <td class="paramdef">
                                 <span class="parameter">foo_frob_parm1</span>,</td>
                           </tr>
                           <tr>
                              <td rowspan="4"/>
                              <td class="paramdef">
                                 <span class="parameter">foo_frob_parm2</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">
                                 <span class="parameter">foo_frob_parm3</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">
                                 <span class="parameter">parm4</span>,</td>
                           </tr>
                           <tr>
                              <td class="paramdef">
                                 <span class="parameter">foo_frob_parm5</span>);</td>
                           </tr>
                        </tbody>
                     </table>
                     <table class="params">
                        <tbody>
                           <tr class="paramdef">
                              <td>foo_sometype1 </td>
                              <td>
                                 <span class="parameter">foo_frob_parm1</span>
                              </td>
                           </tr>
                           <tr class="paramdef">
                              <td>foo_sometype1 </td>
                              <td>
                                 <span class="parameter">foo_frob_parm2</span>
                              </td>
                           </tr>
                           <tr class="paramdef">
                              <td>foo_sometype1 </td>
                              <td>
                                 <span class="parameter">foo_frob_parm3</span>
                              </td>
                           </tr>
                           <tr class="paramdef">
                              <td>int (*<span class="parameter">parm4</span>)
      </td>
                              <td>(<span class="funcparams">int a, int b, int c</span>)</td>
                           </tr>
                           <tr class="paramdef">
                              <td>foo_sometype1 </td>
                              <td>
                                 <span class="parameter">foo_frob_parm5</span>
                              </td>
                           </tr>
                        </tbody>
                     </table>
                  </div>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario19"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The empty sequence is the length</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="()"/>
         </x:call>
      </input-wrap>
      <result select="()"/>
      <test id="scenario19-expect1" successful="true">
         <label>expect the empty sequence</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario20"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The length is zero</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="0"/>
         </x:call>
      </input-wrap>
      <result select="''"/>
      <test id="scenario20-expect1" successful="true">
         <label>expect the empty string</label>
         <expect select="''"/>
      </test>
   </scenario>
   <scenario id="scenario21"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The length is negative</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="-3"/>
         </x:call>
      </input-wrap>
      <result select="()"/>
      <test id="scenario21-expect1" successful="true">
         <label>expect the empty sequence</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario22"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The length is a positive integer (1)</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="1"/>
         </x:call>
      </input-wrap>
      <result select="' '"/>
      <test id="scenario22-expect1" successful="true">
         <label>expect a string of that length</label>
         <expect select="' '"/>
      </test>
   </scenario>
   <scenario id="scenario23"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The length is a positive integer (12)</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="12"/>
         </x:call>
      </input-wrap>
      <result select="'            '"/>
      <test id="scenario23-expect1" successful="true">
         <label>expect a string of that length</label>
         <expect select="'            '"/>
      </test>
   </scenario>
   <scenario id="scenario24"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The length is castable to a positive integer</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="'3'"/>
         </x:call>
      </input-wrap>
      <result select="'   '"/>
      <test id="scenario24-expect1" successful="true">
         <label>expect a string of that length</label>
         <expect select="'   '"/>
      </test>
   </scenario>
   <scenario id="scenario25"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The length isn't numeric'</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="'test'"/>
         </x:call>
      </input-wrap>
      <result select="'    '"/>
      <test id="scenario25-expect1" successful="true">
         <label>expect a string equal in length to the length of the string value of the length argument</label>
         <expect select="'    '"/>
      </test>
   </scenario>
   <scenario id="scenario26"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The length is a sequence of several items'</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="('a', 'b', '3')"/>
         </x:call>
      </input-wrap>
      <result select="'   '"/>
      <test id="scenario26-expect1" successful="true">
         <label>expect them to be concatenated</label>
         <expect select="'   '"/>
      </test>
   </scenario>
   <scenario id="scenario27"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/functions.xspec">
      <label>The length is a sequence of several items'</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:spaces">
            <x:param select="('0', '1', '0')"/>
         </x:call>
      </input-wrap>
      <result select="'          '"/>
      <test id="scenario27-expect1" successful="true">
         <label>expect them to be concatenated</label>
         <expect select="'          '"/>
      </test>
   </scenario>
   <scenario id="scenario28"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting an anchor element with an xml:id and roles</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <anchor xml:id="d1e32" role="a c b"/>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" id="d1e32" class="a anchor b c"/>
         </content-wrap>
      </result>
      <test id="scenario28-expect1" successful="true">
         <label>it should return a single a element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and /h:span"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario28-expect2" successful="true">
         <label>it should return the xml:id in the id</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/h:span/@id = 'd1e32'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario28-expect3" successful="true">
         <label>it should return the roles as classes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/h:span/@class = 'a anchor b c'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario28-expect4" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except (/*/@id | /*/@class))"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario28-expect5" successful="true">
         <label>it should be empty</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/node())"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario29"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting an emphasis element with a bold role</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <emphasis role="bold">This is strongly emphasized</emphasis>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <strong xmlns="http://www.w3.org/1999/xhtml" class="bold">This is strongly emphasized</strong>
         </content-wrap>
      </result>
      <test id="scenario29-expect1" successful="true">
         <label>it should return a strong element</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <strong xmlns="http://www.w3.org/1999/xhtml"
                        xmlns:h="http://www.w3.org/1999/xhtml"
                        xmlns:m="http://docbook.org/ns/docbook/modes"
                        xmlns:x="http://www.jenitennison.com/xslt/xspec"
                        class="bold">This is strongly emphasized</strong>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario30"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a code element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <code>This is a code element.</code>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <code xmlns="http://www.w3.org/1999/xhtml">This is a code element.</code>
         </content-wrap>
      </result>
      <test id="scenario30-expect1" successful="true">
         <label>it should return a single code element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'code' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario30-expect2" successful="true">
         <label>the name shouldn't become a class</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario30-expect3" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except /*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario30-expect4" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a code element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario31"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a code element with an xml:id and roles</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <code xml:id="d15e0" role="b a b c">This is a code element.</code>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <code xmlns="http://www.w3.org/1999/xhtml" id="d15e0" class="a b c">This is a code element.</code>
         </content-wrap>
      </result>
      <test id="scenario31-expect1" successful="true">
         <label>it should return a single code element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'code' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario31-expect2" successful="true">
         <label>it should return the xml:id in the id</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@id = 'd15e0'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario31-expect3" successful="true">
         <label>it should return the roles as classes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@class = 'a b c'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario31-expect4" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except (/*/@id | /*/@class))"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario31-expect5" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a code element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario32"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a quote element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <quote>This is a quote element.</quote>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <q xmlns="http://www.w3.org/1999/xhtml">This is a quote element.</q>
         </content-wrap>
      </result>
      <test id="scenario32-expect1" successful="true">
         <label>it should return a single q element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'q' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario32-expect2" successful="true">
         <label>the name shouldn't become a class</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario32-expect3" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except /*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario32-expect4" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a quote element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario33"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a quote element with an xml:id and roles</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <quote xml:id="d80e0" role="b a b c">This is a quote element.</quote>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <q xmlns="http://www.w3.org/1999/xhtml" id="d80e0" class="a b c">This is a quote element.</q>
         </content-wrap>
      </result>
      <test id="scenario33-expect1" successful="true">
         <label>it should return a single q element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'q' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario33-expect2" successful="true">
         <label>it should return the xml:id in the id</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@id = 'd80e0'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario33-expect3" successful="true">
         <label>it should return the roles as classes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@class = 'a b c'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario33-expect4" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except (/*/@id | /*/@class))"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario33-expect5" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a quote element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario34"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a subscript element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <subscript>This is a subscript element.</subscript>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <sub xmlns="http://www.w3.org/1999/xhtml">This is a subscript element.</sub>
         </content-wrap>
      </result>
      <test id="scenario34-expect1" successful="true">
         <label>it should return a single sub element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'sub' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario34-expect2" successful="true">
         <label>the name shouldn't become a class</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario34-expect3" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except /*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario34-expect4" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a subscript element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario35"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a subscript element with an xml:id and roles</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <subscript xml:id="d85e0" role="b a b c">This is a subscript element.</subscript>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <sub xmlns="http://www.w3.org/1999/xhtml" id="d85e0" class="a b c">This is a subscript element.</sub>
         </content-wrap>
      </result>
      <test id="scenario35-expect1" successful="true">
         <label>it should return a single sub element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'sub' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario35-expect2" successful="true">
         <label>it should return the xml:id in the id</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@id = 'd85e0'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario35-expect3" successful="true">
         <label>it should return the roles as classes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@class = 'a b c'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario35-expect4" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except (/*/@id | /*/@class))"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario35-expect5" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a subscript element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario36"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a superscript element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <superscript>This is a superscript element.</superscript>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <sup xmlns="http://www.w3.org/1999/xhtml">This is a superscript element.</sup>
         </content-wrap>
      </result>
      <test id="scenario36-expect1" successful="true">
         <label>it should return a single sup element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'sup' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario36-expect2" successful="true">
         <label>the name shouldn't become a class</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario36-expect3" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except /*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario36-expect4" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a superscript element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario37"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a superscript element with an xml:id and roles</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <superscript xml:id="d86e0" role="b a b c">This is a superscript element.</superscript>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <sup xmlns="http://www.w3.org/1999/xhtml" id="d86e0" class="a b c">This is a superscript element.</sup>
         </content-wrap>
      </result>
      <test id="scenario37-expect1" successful="true">
         <label>it should return a single sup element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'sup' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario37-expect2" successful="true">
         <label>it should return the xml:id in the id</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@id = 'd86e0'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario37-expect3" successful="true">
         <label>it should return the roles as classes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@class = 'a b c'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario37-expect4" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except (/*/@id | /*/@class))"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario37-expect5" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a superscript element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario38"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a tag element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <tag>This is a tag element.</tag>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <code xmlns="http://www.w3.org/1999/xhtml" class="tag tag-element">This is a tag element.</code>
         </content-wrap>
      </result>
      <test id="scenario38-expect1" successful="true">
         <label>it should return a single code element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'code' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario38-expect2" successful="true">
         <label>it should return the DocBook name as the class</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@class = 'tag tag-element'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario38-expect3" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except /*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario38-expect4" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a tag element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario39"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a tag element with an xml:id and roles</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <tag xml:id="d84e0" role="b a b c">This is a tag element.</tag>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <code xmlns="http://www.w3.org/1999/xhtml"
                   id="d84e0"
                   class="a b c tag tag-element">This is a tag element.</code>
         </content-wrap>
      </result>
      <test id="scenario39-expect1" successful="true">
         <label>it should return a single code element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'code' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario39-expect2" successful="true">
         <label>it should return the xml:id in the id</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@id = 'd84e0'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario39-expect3" successful="true">
         <label>it should return the roles as classes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@class = 'a b c tag tag-element'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario39-expect4" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except (/*/@id | /*/@class))"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario39-expect5" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a tag element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario40"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a personname element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <personname>This is a personname element.</personname>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml" class="first-last personname">This is a personname element.</span>
         </content-wrap>
      </result>
      <test id="scenario40-expect1" successful="true">
         <label>it should return a single span element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'span' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario40-expect2" successful="true">
         <label>it should return the DocBook name as the class</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@class = 'first-last personname'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario40-expect3" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except /*/@class)"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario40-expect4" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a personname element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario41"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/inlines.xspec">
      <label>When converting a personname element with an xml:id and roles</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <personname xml:id="d71e0" role="b a b c">This is a personname element.</personname>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <span xmlns="http://www.w3.org/1999/xhtml"
                   id="d71e0"
                   class="a b c first-last personname">This is a personname element.</span>
         </content-wrap>
      </result>
      <test id="scenario41-expect1" successful="true">
         <label>it should return a single span element</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="count(/*) = 1 and local-name(/*[1]) = 'span' and namespace-uri(/*[1]) = 'http://www.w3.org/1999/xhtml'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario41-expect2" successful="true">
         <label>it should return the xml:id in the id</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@id = 'd71e0'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario41-expect3" successful="true">
         <label>it should return the roles as classes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="/*/@class = 'a b c first-last personname'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario41-expect4" successful="true">
         <label>it should not return any other attributes</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test="empty(/*/@* except (/*/@id | /*/@class))"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario41-expect5" successful="true">
         <label>it should return the correct text</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:h="http://www.w3.org/1999/xhtml"
                       xmlns:m="http://docbook.org/ns/docbook/modes"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       test=". = 'This is a personname element.'"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario42"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/oosynopsis.xspec">
      <label>When transforming classsynopsis.001</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/classsynopsis.001.xml"
                     select="//*[@xml:id='class']"
                     mode="m:docbook"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="class" class="classsynopsis">
               <div class="pre-wrap">
                  <pre class="classsynopsisinfo verbatim">
                     <code>// This is just a made up example.
// Mostly.</code>
                  </pre>
               </div>
               <pre>public class Catalog {
  <span class="fieldsynopsis">public static final int <span class="varname">BASE</span> = <span class="initializer">CatalogEntry.addEntryType("BASE", 1)</span>;</span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
  </ws>
                  <span class="constructorsynopsis">public Catalog();
</span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                  <span class="methodsynopsis">protected copyReaders(<span class="methodparam">Catalog newCatalog</span>);</span>
}</pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario42-expect1" successful="true">
         <label>expect a class synopsis</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="class" class="classsynopsis">
                  <div class="pre-wrap">
                     <pre class="classsynopsisinfo verbatim">
                        <code>// This is just a made up example.
// Mostly.</code>
                     </pre>
                  </div>
                  <pre>public class Catalog {
  <span class="fieldsynopsis">public static final int <span class="varname">BASE</span> = <span class="initializer">CatalogEntry.addEntryType("BASE", 1)</span>;</span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
  </ws>
                     <span class="constructorsynopsis">public Catalog();
</span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                     <span class="methodsynopsis">protected copyReaders(<span class="methodparam">Catalog newCatalog</span>);</span>
}</pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario43"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/oosynopsis.xspec">
      <label>When transforming methodsynopsis.001</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/methodsynopsis.001.xml"
                     select="//*[@xml:id='class']"
                     mode="m:docbook"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="class" class="classsynopsis">
               <pre>class Foo {
  <span class="methodsynopsis">public static double getQuote(<span class="methodparam">String symbol</span>,
                                <span class="methodparam">double price</span>);</span>
}</pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario43-expect1" successful="true">
         <label>expect a class synopsis</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="class" class="classsynopsis">
                  <pre>class Foo {
  <span class="methodsynopsis">public static double getQuote(<span class="methodparam">String symbol</span>,
                                <span class="methodparam">double price</span>);</span>
}</pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario44"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/oosynopsis.xspec">
      <label>When transforming synopsisinfo.001</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/synopsisinfo.001.xml"
                     select="//*[@xml:id='class']"
                     mode="m:docbook"/>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" id="class" class="classsynopsis">
               <pre>public class Catalog {
  <span class="fieldsynopsis">public static final int <span class="varname">BASE</span> = <span class="initializer">CatalogEntry.addEntryType("BASE", 1)</span>;</span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="synopsisinfo">  Random text
</span>
                  <span class="synopsisinfo">Also random text
</span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                  <span class="constructorsynopsis">public Catalog();
</span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                  <span class="methodsynopsis">protected copyReaders(<span class="methodparam">Catalog newCatalog</span>);</span>
                  <span class="synopsisinfo">
  More random text</span>
}</pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario44-expect1" successful="true">
         <label>expect synopses</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" id="class" class="classsynopsis">
                  <pre>public class Catalog {
  <span class="fieldsynopsis">public static final int <span class="varname">BASE</span> = <span class="initializer">CatalogEntry.addEntryType("BASE", 1)</span>;</span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="synopsisinfo">  Random text
</span>
                     <span class="synopsisinfo">Also random text
</span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                     <span class="constructorsynopsis">public Catalog();
</span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                     <span class="methodsynopsis">protected copyReaders(<span class="methodparam">Catalog newCatalog</span>);</span>
                     <span class="synopsisinfo">
  More random text</span>
}</pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario45"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/oosynopsis.xspec">
      <label>When transforming packagesynopsis.001</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/packagesynopsis.001.xml"/>
      </input-wrap>
      <result select="/self::document-node()">
         <content-wrap xmlns="">
            <html xmlns="http://www.w3.org/1999/xhtml" class="no-js">
               <head>
                  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
                  <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
                  <title>Unit test: packagesynopsis.001</title>
                  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
                  <link href="https://purl.org/dc/elements/1.1/" rel="schema.dc"/>
                  <meta content="2011-04-22T17:02:00-06:00" name="dc.modified"/>
                  <meta content="DocBook xslTNG" name="generator"/>
                  <link href="./css/docbook.css" rel="stylesheet" media="screen"/>
                  <link href="./css/docbook-paged.css" rel="stylesheet" media="print"/>
               </head>
               <body class="home">
                  <nav class="top"/>
                  <main>
                     <article class="article component">
                        <header>
                           <h1>Unit test: packagesynopsis.001</h1>
                        </header>
                        <div id="package" class="packagesynopsis">
                           <pre>package <code class="package">org.example.package</code>;
</pre>
                           <div id="class" class="classsynopsis">
                              <div class="pre-wrap">
                                 <pre class="classsynopsisinfo verbatim">
                                    <code>// This is just a made up example.
// Mostly.</code>
                                 </pre>
                              </div>
                              <pre>public class Catalog {
  <span class="fieldsynopsis">public static final int <span class="varname">BASE</span> = <span class="initializer">CatalogEntry.addEntryType("BASE", 1)</span>;</span>
                                 <ws xmlns="http://www.jenitennison.com/xslt/xspec">
  </ws>
                                 <span class="constructorsynopsis">public Catalog();
</span>
                                 <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                                 <span class="methodsynopsis">protected copyReaders(<span class="methodparam">Catalog newCatalog</span>);</span>
}</pre>
                           </div>
                        </div>
                     </article>
                  </main>
                  <nav class="bottom"/>
               </body>
            </html>
         </content-wrap>
      </result>
      <test id="scenario45-expect1" successful="true">
         <label>expect a package synopsis</label>
         <expect select="/self::document-node()">
            <content-wrap xmlns="">
               <html xmlns="http://www.w3.org/1999/xhtml" class="no-js">
                  <head>
                     <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
                     <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
                     <title>Unit test: packagesynopsis.001</title>
                     <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
                     <link href="https://purl.org/dc/elements/1.1/" rel="schema.dc"/>
                     <meta content="2011-04-22T17:02:00-06:00" name="dc.modified"/>
                     <meta content="DocBook xslTNG" name="generator"/>
                     <link href="./css/docbook.css" rel="stylesheet" media="screen"/>
                     <link href="./css/docbook-paged.css" rel="stylesheet" media="print"/>
                  </head>
                  <body class="home">
                     <nav class="top"/>
                     <main>
                        <article class="article component">
                           <header>
                              <h1>Unit test: packagesynopsis.001</h1>
                           </header>
                           <div id="package" class="packagesynopsis">
                              <pre>package <code class="package">org.example.package</code>;
</pre>
                              <div id="class" class="classsynopsis">
                                 <div class="pre-wrap">
                                    <pre class="classsynopsisinfo verbatim">
                                       <code>// This is just a made up example.
// Mostly.</code>
                                    </pre>
                                 </div>
                                 <pre>public class Catalog {
  <span class="fieldsynopsis">public static final int <span class="varname">BASE</span> = <span class="initializer">CatalogEntry.addEntryType("BASE", 1)</span>;</span>
                                    <ws xmlns="http://www.jenitennison.com/xslt/xspec">
  </ws>
                                    <span class="constructorsynopsis">public Catalog();
</span>
                                    <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                                    <span class="methodsynopsis">protected copyReaders(<span class="methodparam">Catalog newCatalog</span>);</span>
}</pre>
                              </div>
                           </div>
                        </article>
                     </main>
                     <nav class="bottom"/>
                  </body>
               </html>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario46"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/oosynopsis.xspec">
      <label>When transforming enumsynopsis.001</label>
      <input-wrap xmlns="">
         <x:context xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     href="file:/home/runner/work/xslTNG/xslTNG/src/test/resources/xml/enumsynopsis.001.xml"
                     select="//*[@xml:id='class']"
                     mode="m:docbook"/>
      </input-wrap>
      <result select="()"/>
      <test id="scenario46-expect1" successful="true">
         <label>expect an enum synopsis</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario47"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 1.0in</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'1.0in'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"in","relative":0,"magnitude":1.0e0}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario47-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"in","relative":0,"magnitude":1}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario48"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 1.0m</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'1.0m'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"m","relative":0,"magnitude":1.0e0}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario48-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"m","relative":0,"magnitude":1}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario49"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 1.0cm</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'1.0cm'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"cm","relative":0,"magnitude":1.0e0}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario49-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"cm","relative":0,"magnitude":1}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario50"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 1.0mm</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'1.0mm'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"mm","relative":0,"magnitude":1.0e0}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario50-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"mm","relative":0,"magnitude":1}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario51"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 1.0pc</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'1.0pc'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"pc","relative":0,"magnitude":1.0e0}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario51-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"pc","relative":0,"magnitude":1}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario52"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 1.0pt</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'1.0pt'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"pt","relative":0,"magnitude":1.0e0}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario52-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"pt","relative":0,"magnitude":1}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario53"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 3.14barleycorn</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'3.14barleycorn'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"barleycorn","relative":0,"magnitude":3.14e0}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario53-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"barleycorn","relative":0,"magnitude":3.14}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario54"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 1.0smoot</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'1.0smoot'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"%","relative":0,"magnitude":25}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario54-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"%","relative":0,"magnitude":25}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario55"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 25%</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'25%'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"%","relative":0,"magnitude":2.5e1}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario55-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"%","relative":0,"magnitude":25}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario56"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 100%</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'100%'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"%","relative":0,"magnitude":1.0e2}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario56-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"%","relative":0,"magnitude":100}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario57"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 125%</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'125%'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"%","relative":0,"magnitude":1.25e2}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario57-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"%","relative":0,"magnitude":125}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario58"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 3*+0.5in</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'3*+0.5in'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"in","relative":3,"magnitude":5.0e-1}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario58-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"in","relative":3,"magnitude":0.5}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario59"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 75</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'75'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"px","relative":0,"magnitude":7.5e1}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario59-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"px","relative":0,"magnitude":75}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario60"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/units.xspec">
      <label>When computing the length 2.5*</label>
      <input-wrap xmlns="">
         <x:call xmlns:f="http://docbook.org/ns/docbook/functions"
                  xmlns:x="http://www.jenitennison.com/xslt/xspec"
                  function="f:parse-length">
            <x:param select="'2.5*'"/>
         </x:call>
      </input-wrap>
      <result select="/*">
         <content-wrap xmlns="">
            <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"px","relative":2.5,"magnitude":0}</pseudo-map>
         </content-wrap>
      </result>
      <test id="scenario60-expect1" successful="true">
         <label>return the correct parse</label>
         <expect select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{"unit":"px","relative":2.5,"magnitude":0}</pseudo-map>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario61"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting an address in the raw style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'raw'"/>
            <address>Line one
Line two
Line three
Line four
Line five</address>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="address verbatim">Line one
Line two
Line three
Line four
Line five</pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario61-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="address verbatim">Line one
Line two
Line three
Line four
Line five</pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario62"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a literallayout in the raw style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'raw'"/>
            <literallayout>Line one
Line two
Line three
Line four
Line five</literallayout>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="literallayout verbatim">Line one
Line two
Line three
Line four
Line five</pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario62-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="literallayout verbatim">Line one
Line two
Line three
Line four
Line five</pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario63"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a programlisting in the raw style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'raw'"/>
            <programlisting>Line one
Line two
Line three
Line four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="language-none numbered programlisting verbatim">
                  <code>Line one
Line two
Line three
Line four
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario63-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="language-none numbered programlisting verbatim">
                     <code>Line one
Line two
Line three
Line four
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario64"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a screen in the raw style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'raw'"/>
            <screen>Line one
Line two
Line three
Line four
Line five</screen>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="screen verbatim">
                  <code>Line one
Line two
Line three
Line four
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario64-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="screen verbatim">
                     <code>Line one
Line two
Line three
Line four
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario65"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a synopsis in the raw style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'raw'"/>
            <synopsis>Line one
Line two
Line three
Line four
Line five</synopsis>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="synopsis verbatim">
                  <code>Line one
Line two
Line three
Line four
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario65-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="synopsis verbatim">
                     <code>Line one
Line two
Line three
Line four
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario66"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a verbatim with inline markup in the raw style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'raw'"/>
            <programlisting>Line one
Line <emphasis>two</emphasis>
Line <emphasis>end of three
start of four</emphasis>
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="language-none numbered programlisting verbatim">
                  <code>Line one
Line <em>two</em>
Line <em>end of three
start of four</em>
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario66-expect1" successful="true">
         <label>the inline markup should be transformed.</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="language-none numbered programlisting verbatim">
                     <code>Line one
Line <em>two</em>
Line <em>end of three
start of four</em>
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario67"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting an address in the plain style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <address>Line one
Line two
Line three
Line four
Line five</address>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="address verbatim">Line one
Line two
Line three
Line four
Line five</pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario67-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="address verbatim">Line one
Line two
Line three
Line four
Line five</pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario68"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a literallayout in the plain style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <literallayout>Line one
Line two
Line three
Line four
Line five</literallayout>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="literallayout verbatim">Line one
Line two
Line three
Line four
Line five</pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario68-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="literallayout verbatim">Line one
Line two
Line three
Line four
Line five</pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario69"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a programlisting in the plain style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <programlisting>Line one
Line two
Line three
Line four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="language-none numbered programlisting verbatim">
                  <code>Line one
Line two
Line three
Line four
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario69-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="language-none numbered programlisting verbatim">
                     <code>Line one
Line two
Line three
Line four
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario70"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a screen in the plain style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <screen>Line one
Line two
Line three
Line four
Line five</screen>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="screen verbatim">
                  <code>Line one
Line two
Line three
Line four
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario70-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="screen verbatim">
                     <code>Line one
Line two
Line three
Line four
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario71"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a synopsis in the plain style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <synopsis>Line one
Line two
Line three
Line four
Line five</synopsis>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="synopsis verbatim">
                  <code>Line one
Line two
Line three
Line four
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario71-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="synopsis verbatim">
                     <code>Line one
Line two
Line three
Line four
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario72"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a verbatim with inline markup in the plain style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     select="/*/*"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <div xml:space="preserve"><programlisting>Line one
Line <emphasis>two</emphasis>
Line <emphasis>end of three
start of four</emphasis>
Line five</programlisting></div>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="language-none numbered programlisting verbatim">
                  <code>Line one
Line <em>two</em>
Line <em>end of three</em>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <em>start of four</em>
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario72-expect1" successful="true">
         <label>the inline markup should be transformed.</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="language-none numbered programlisting verbatim">
                     <code>Line one
Line <em>two</em>
Line <em>end of three</em>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                        <em>start of four</em>
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario73"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting an address in the lines style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <address>Line one
Line two
Line three
Line four
Line five</address>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="address verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line one</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line two</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line three</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line four</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line five</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario73-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
                  <pre class="address verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line one</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line two</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line three</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line four</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line five</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario74"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a literallayout in the lines style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <literallayout>Line one
Line two
Line three
Line four
Line five</literallayout>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="literallayout verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line one</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line two</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line three</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line four</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">Line five</span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario74-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
                  <pre class="literallayout verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line one</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line two</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line three</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line four</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">Line five</span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario75"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a programlisting in the lines style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <programlisting>Line one
Line two
Line three
Line four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml"
                  class="pre-wrap"
                  db-startinglinenumber="1"
                  db-numberoflines="5">
               <pre class="language-none long numbered programlisting verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">1 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line one</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line two</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line three</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line four</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">5 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line five</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario75-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     class="pre-wrap"
                     db-startinglinenumber="1"
                     db-numberoflines="5">
                  <pre class="language-none long numbered programlisting verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">1 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line one</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line two</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line three</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line four</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">5 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line five</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario76"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a screen in the lines style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <screen>Line one
Line two
Line three
Line four
Line five</screen>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="screen verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line one</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line two</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line three</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line four</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line five</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario76-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
                  <pre class="screen verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line one</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line two</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line three</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line four</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line five</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario77"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a synopsis in the lines style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <synopsis>Line one
Line two
Line three
Line four
Line five</synopsis>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="synopsis verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line one</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line two</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line three</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line four</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line five</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario77-expect1" successful="true">
         <label>you should get all the lines</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
                  <pre class="synopsis verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line one</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line two</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line three</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line four</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line five</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario78"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a verbatim with inline markup in the lines style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <programlisting>Line one
Line <emphasis>two</emphasis>
Line <emphasis>end of three
Start of line</emphasis> four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml"
                  class="pre-wrap"
                  db-startinglinenumber="1"
                  db-numberoflines="5">
               <pre class="language-none long numbered programlisting verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">1 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line one</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line <em>two</em>
                        </code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line <em>end of three</em>
                        </code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>
                           <em>Start of line</em> four</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">5 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line five</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario78-expect1" successful="true">
         <label>the inline markup should not cross line boundaries.</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     class="pre-wrap"
                     db-startinglinenumber="1"
                     db-numberoflines="5">
                  <pre class="language-none long numbered programlisting verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">1 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line one</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line <em>two</em>
                           </code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line <em>end of three</em>
                           </code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>
                              <em>Start of line</em> four</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">5 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line five</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario79"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When converting a verbatim with inline markup in the lines style</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <programlisting>Line one
Line <emphasis xml:id="two">two</emphasis>
Line <emphasis xml:id="three">end of three
Start of line</emphasis> four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml"
                  class="pre-wrap"
                  db-startinglinenumber="1"
                  db-numberoflines="5">
               <pre class="language-none long numbered programlisting verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">1 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line one</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line <em id="two">two</em>
                        </code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line <em id="three">end of three</em>
                        </code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>
                           <em>Start of line</em> four</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">5 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line five</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario79-expect1" successful="true">
         <label>ID attributes should not be repeated.</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     class="pre-wrap"
                     db-startinglinenumber="1"
                     db-numberoflines="5">
                  <pre class="language-none long numbered programlisting verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">1 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line one</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line <em id="two">two</em>
                           </code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line <em id="three">end of three</em>
                           </code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>
                              <em>Start of line</em> four</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">5 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line five</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario80"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When callouts are added to a verbatim element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <x:param name="inject" as="element()">
               <areaspec>
                  <area coords="1 1">①</area>
                  <area coords="2 5">②</area>
                  <area coords="3 20">③</area>
               </areaspec>
            </x:param>
            <programlisting>Line one
Line two
Line three
Line four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml"
                  class="pre-wrap"
                  db-startinglinenumber="1"
                  db-numberoflines="5">
               <pre class="language-none long numbered programlisting verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">1 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>
                           <a id="R_area1"
                               class="callout-bug linecolumn"
                               db-line="1"
                               db-column="1">①</a>Line one</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line<a id="R_area2"
                               class="callout-bug linecolumn"
                               db-line="2"
                               db-column="5">②</a> two</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line three         <a id="R_area3"
                               class="callout-bug linecolumn"
                               db-line="3"
                               db-column="20">③</a>
                        </code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line four</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">5 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line five</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario80-expect1" successful="true">
         <label>they should appear in the output</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     class="pre-wrap"
                     db-startinglinenumber="1"
                     db-numberoflines="5">
                  <pre class="language-none long numbered programlisting verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">1 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>
                              <a id="R_area1"
                                  class="callout-bug linecolumn"
                                  db-line="1"
                                  db-column="1">①</a>Line one</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line<a id="R_area2"
                                  class="callout-bug linecolumn"
                                  db-line="2"
                                  db-column="5">②</a> two</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line three         <a id="R_area3"
                                  class="callout-bug linecolumn"
                                  db-line="3"
                                  db-column="20">③</a>
                           </code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line four</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">5 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line five</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario81"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When callouts are added to a verbatim element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'lines'"/>
            <x:param name="inject" as="element()">
               <areaspec>
                  <area coords="1 1">①</area>
                  <area coords="2 5">②</area>
                  <area coords="8 8">③</area>
               </areaspec>
            </x:param>
            <programlisting>Line one
Line two
Line three
Line four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml"
                  class="pre-wrap"
                  db-startinglinenumber="1"
                  db-numberoflines="8">
               <pre class="language-none long numbered programlisting verbatim verblines">
                  <span class="line" db-line="1">
                     <span class="ln">1 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>
                           <a id="R_area1"
                               class="callout-bug linecolumn"
                               db-line="1"
                               db-column="1">①</a>Line one</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="2">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line<a id="R_area2"
                               class="callout-bug linecolumn"
                               db-line="2"
                               db-column="5">②</a> two</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="3">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line three</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="4">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line four</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="5">
                     <span class="ln">5 <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>Line five</code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="6">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                        </code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="7">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                        </code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  <span class="line" db-line="8">
                     <span class="ln">
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                        <span class="nsep">|</span>
                     </span>
                     <span class="ld">
                        <code>
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">       </ws>
                           <a id="R_area3"
                               class="callout-bug linecolumn"
                               db-line="8"
                               db-column="8">③</a>
                        </code>
                     </span>
                  </span>
                  <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario81-expect1" successful="true">
         <label>they can extend the listing</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     class="pre-wrap"
                     db-startinglinenumber="1"
                     db-numberoflines="8">
                  <pre class="language-none long numbered programlisting verbatim verblines">
                     <span class="line" db-line="1">
                        <span class="ln">1 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>
                              <a id="R_area1"
                                  class="callout-bug linecolumn"
                                  db-line="1"
                                  db-column="1">①</a>Line one</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="2">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line<a id="R_area2"
                                  class="callout-bug linecolumn"
                                  db-line="2"
                                  db-column="5">②</a> two</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="3">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line three</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="4">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line four</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="5">
                        <span class="ln">5 <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>Line five</code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="6">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>
                              <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                           </code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="7">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>
                              <ws xmlns="http://www.jenitennison.com/xslt/xspec"> </ws>
                           </code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <span class="line" db-line="8">
                        <span class="ln">
                           <ws xmlns="http://www.jenitennison.com/xslt/xspec">  </ws>
                           <span class="nsep">|</span>
                        </span>
                        <span class="ld">
                           <code>
                              <ws xmlns="http://www.jenitennison.com/xslt/xspec">       </ws>
                              <a id="R_area3"
                                  class="callout-bug linecolumn"
                                  db-line="8"
                                  db-column="8">③</a>
                           </code>
                        </span>
                     </span>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario82"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When callouts are added to a verbatim element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <x:param name="inject" as="element()">
               <areaspec>
                  <area coords="1 1">①</area>
                  <area coords="2 5">②</area>
                  <area coords="3 20">③</area>
               </areaspec>
            </x:param>
            <programlisting>Line one
Line two
Line three
Line four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="language-none numbered programlisting verbatim">
                  <code>
                     <a id="R_area1"
                         class="callout-bug linecolumn"
                         db-line="1"
                         db-column="1">①</a>Line one
Line<a id="R_area2"
                         class="callout-bug linecolumn"
                         db-line="2"
                         db-column="5">②</a> two
Line three         <a id="R_area3"
                         class="callout-bug linecolumn"
                         db-line="3"
                         db-column="20">③</a>
Line four
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario82-expect1" successful="true">
         <label>plain mode also works</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="language-none numbered programlisting verbatim">
                     <code>
                        <a id="R_area1"
                            class="callout-bug linecolumn"
                            db-line="1"
                            db-column="1">①</a>Line one
Line<a id="R_area2"
                            class="callout-bug linecolumn"
                            db-line="2"
                            db-column="5">②</a> two
Line three         <a id="R_area3"
                            class="callout-bug linecolumn"
                            db-line="3"
                            db-column="20">③</a>
Line four
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario83"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When callouts are added to a verbatim element</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <x:param name="inject" as="element()">
               <areaspec>
                  <area coords="1 1">
                     <a xmlns="http://www.w3.org/1999/xhtml" name="one">①</a>
                  </area>
                  <area coords="2 5">
                     <span xmlns="http://www.w3.org/1999/xhtml" id="two">②</span>
                  </area>
                  <area coords="3 20">
                     <span xmlns="http://www.w3.org/1999/xhtml" id="three" class="callout">③</span>
                  </area>
               </areaspec>
            </x:param>
            <programlisting>Line one
Line two
Line three
Line four
Line five</programlisting>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="language-none numbered programlisting verbatim">
                  <code>
                     <a id="R_area1"
                         class="callout-bug linecolumn"
                         db-line="1"
                         db-column="1">①</a>Line one
Line<a id="R_area2"
                         class="callout-bug linecolumn"
                         db-line="2"
                         db-column="5">②</a> two
Line three         <a id="R_area3"
                         class="callout-bug linecolumn"
                         db-line="3"
                         db-column="20">③</a>
Line four
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario83-expect1" successful="true">
         <label>markup can also be inserted</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="language-none numbered programlisting verbatim">
                     <code>
                        <a id="R_area1"
                            class="callout-bug linecolumn"
                            db-line="1"
                            db-column="1">①</a>Line one
Line<a id="R_area2"
                            class="callout-bug linecolumn"
                            db-line="2"
                            db-column="5">②</a> two
Line three         <a id="R_area3"
                            class="callout-bug linecolumn"
                            db-line="3"
                            db-column="20">③</a>
Line four
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
   <scenario id="scenario84"
              xspec="file:/home/runner/work/xslTNG/xslTNG/build/xspec/verbatim.xspec">
      <label>When callouts are inserted into markup</label>
      <input-wrap xmlns="">
         <x:context xmlns="http://docbook.org/ns/docbook"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     select="/*/*"
                     mode="m:docbook">
            <x:param name="style" select="'plain'"/>
            <x:param name="inject" as="element()">
               <areaspec>
                  <area coords="1 1">①</area>
                  <area coords="2 5">②</area>
                  <area coords="3 20">③</area>
               </areaspec>
            </x:param>
            <div xml:space="preserve"><programlisting><emphasis>Line one</emphasis>
<emphasis>Line two
Line three
Line four</emphasis>
Line five</programlisting></div>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <div xmlns="http://www.w3.org/1999/xhtml" class="pre-wrap">
               <pre class="language-none numbered programlisting verbatim">
                  <code>
                     <a id="R_area1"
                         class="callout-bug linecolumn"
                         db-line="1"
                         db-column="1">①</a>
                     <em>Line one</em>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <em>Line</em>
                     <a id="R_area2"
                         class="callout-bug linecolumn"
                         db-line="2"
                         db-column="5">②</a>
                     <em> two</em>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <em>Line three</em>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">         </ws>
                     <a id="R_area3"
                         class="callout-bug linecolumn"
                         db-line="3"
                         db-column="20">③</a>
                     <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                     <em>Line four</em>
Line five</code>
               </pre>
            </div>
         </content-wrap>
      </result>
      <test id="scenario84-expect1" successful="true">
         <label>they interrupt that markup</label>
         <expect select="/element()">
            <content-wrap xmlns="">
               <div xmlns="http://www.w3.org/1999/xhtml"
                     xmlns:h="http://www.w3.org/1999/xhtml"
                     xmlns:m="http://docbook.org/ns/docbook/modes"
                     xmlns:x="http://www.jenitennison.com/xslt/xspec"
                     class="pre-wrap">
                  <pre class="language-none numbered programlisting verbatim">
                     <code>
                        <a id="R_area1"
                            class="callout-bug linecolumn"
                            db-line="1"
                            db-column="1">①</a>
                        <em>Line one</em>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                        <em>Line</em>
                        <a id="R_area2"
                            class="callout-bug linecolumn"
                            db-line="2"
                            db-column="5">②</a>
                        <em> two</em>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                        <em>Line three</em>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">         </ws>
                        <a id="R_area3"
                            class="callout-bug linecolumn"
                            db-line="3"
                            db-column="20">③</a>
                        <ws xmlns="http://www.jenitennison.com/xslt/xspec">
</ws>
                        <em>Line four</em>
Line five</code>
                  </pre>
               </div>
            </content-wrap>
         </expect>
      </test>
   </scenario>
</report>
