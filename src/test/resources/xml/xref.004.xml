<?xml version="1.0" encoding="utf-8"?>
<article xmlns="http://docbook.org/ns/docbook" xml:id="article" version="5.0">
   <info>
      <title>Unit Test: xref.004.xml</title>
      <titleabbrev>Unit 04</titleabbrev>

      <author>
         <personname>
            <firstname>Frank</firstname>
            <surname>Steimke</surname>
         </personname>
         <affiliation>
            <address>
               <email>fsteimke.hb@gmail.com</email>
            </address>
         </affiliation>
      </author>
   </info>

   <section xml:id="profiling">
      <title>Effectivity attributes and profiling</title>
      <section>
         <title>Effectivity</title>

         <para>When a document is formatted, the stylesheets can selectively include or omit
            elements based on their configured effectivity. This “profiled” version of the document
            is the one that’s explicitly targeted to the audience specified.</para>

         <para>DocBook supports a wide variety of common attributes for this purpose:</para>

         <table xml:id="table.effectivity-attributes">
            <title>Common DocBook effectivity attributes</title>
            <tgroup cols="2">
               <thead>
                  <row>
                     <entry>Attribute</entry>
                     <entry>Nominal effectivity axis</entry>
                  </row>
               </thead>
               <tbody>
                  <row>
                     <entry>arch</entry>
                     <entry>The architecture, Intel or AMD</entry>
                  </row>
                  <row>
                     <entry>audience</entry>
                     <entry>The audience, operations or development</entry>
                  </row>
                  <row>
                     <entry>condition</entry>
                     <entry>Any condition (semantically neutral)</entry>
                  </row>
                  <row>
                     <entry>conformance</entry>
                     <entry>The conformance level</entry>
                  </row>
                  <row>
                     <entry>os</entry>
                     <entry>The operating system, Windows or Linux</entry>
                  </row>
                  <row>
                     <entry>outputformat</entry>
                     <entry>The output format, print or online</entry>
                  </row>
                  <row>
                     <entry>revision</entry>
                     <entry>The revision, 3.4 or 4.0.</entry>
                  </row>
                  <row>
                     <entry>security</entry>
                     <entry>The security, secret or top-secret</entry>
                  </row>
                  <row>
                     <entry>userlevel</entry>
                     <entry>The user level, novice or expert</entry>
                  </row>
                  <row>
                     <entry>vendor</entry>
                     <entry>The vendor, Acme or Yoyodyne</entry>
                  </row>
                  <row>
                     <entry>wordsize</entry>
                     <entry>The word size, 32 or 64 bit</entry>
                  </row>
               </tbody>
            </tgroup>
         </table>
      </section>
   </section>

<section xml:id="customize-individual-cross-references">
   <title>Customize individual cross references</title>
   <para>The text that is generated by cross references can be customized for individual elements
      with the <code>xrefstyle</code> Attribute. Lets say you want to reference a numbered
      chapter or a section with <emphasis>target</emphasis> as its <emphasis>@xml:id</emphasis>.
      While <code>&lt;xref linkend='target'/&gt;</code> will give you a generated text in a
      default style, you can customize it for individual cross references and write something
      like <code>&lt;xref linkend='target' <emphasis role="bold"
         >xrefstyle='%label'</emphasis>&gt;</code>, which would result in the target s name and number, e.&#xa0;g.&#xa0;<emphasis>Section 2.1</emphasis>.</para>
   <para>You can use the <code>%c</code>, <code>%l</code> and <code>%p</code> values . There is
      also an additional <code>%label</code> for <emphasis>the full Label</emphasis>, which is
      the component`s name and number. The use of these percent-values is explained in the
      following table, where all cross references target the next section called <xref
         linkend="syntax-highlighting" xrefstyle="%c"/>.</para>
   <informaltable>
      <tgroup cols="3">
         <colspec colname="c1" colwidth="2*" rowsep="1"/>
         <colspec colname="c2" colwidth="1*" rowsep="1"/>
         <colspec colname="c3" colwidth="2*" rowsep="1"/>
         
         <thead>
            <row>
               <entry><para>Value of <code>xref/@xrefstyle</code></para></entry>
               <entry><para>Result</para></entry>
               <entry><para>Remark</para></entry>
            </row>
         </thead>
         
         <tbody>
            <row>
               <entry>(<code>@xrefstyle</code> is absent)</entry>
               <entry><xref linkend="syntax-highlighting"/></entry>
               <entry>Default</entry>
            </row>
            <row>
               <entry><code>%c</code></entry>
               <entry><xref linkend="syntax-highlighting" xrefstyle="%c"/></entry>
               <entry><para>Content, e. g. title of target</para></entry>
            </row>
            <row>
               <entry><code>%l</code></entry>
               <entry><xref linkend="syntax-highlighting" xrefstyle="%l"/></entry>
               <entry><para>Label, ususally the targets number.</para></entry>
            </row>
            <row>
               <entry><code>%label</code></entry>
               <entry><xref linkend="syntax-highlighting" xrefstyle="%label"/></entry>
               <entry><para>The full Label, ususally the targets number and name.</para></entry>
            </row>
            <row>
               <entry><code>%p</code></entry>
               <entry><phrase outputformat="print"><xref linkend="syntax-highlighting"
                  xrefstyle="%p"/></phrase></entry>
               <entry><para>Page number.</para>
                  <para>Intended for PDF. Displayed as <emphasis>"#"</emphasis> in HTML, unless
                     you differentiate between the output formats for print and online. See <xref
                        linkend="using-pagenumber-in-crossreferences" xrefstyle="%label"/> for a
                     possible solution.</para></entry>
            </row>
            <row>
               <entry><code>%label (%c)</code></entry>
               <entry><xref linkend="syntax-highlighting" xrefstyle="%label (%c)"/></entry>
               <entry><para>You can use different %-letters and combine with text</para></entry>
            </row>
         </tbody>
      </tgroup>
   </informaltable>
   
   <bridgehead>Legacy values for xrefstyle</bridgehead>
   <para>In order to support migration from XSLT 1.0 Stylesheets, xslTNG supports the
      <code>template:</code> Syntax which is explained in the Book "DocBook XSL: The Complete
      Guide", Section "<link xmlns:xlink="http://www.w3.org/1999/xlink"
         xlink:href="http://www.sagehill.net/docbookxsl/CustomXrefs.html#usingtemplate"
         >Customizing with an xrefstyle attribute / Using template:</link>". This is explained
      with the following table.</para>
   <informaltable>
      <tgroup cols="3">
         <colspec colname="c1" colwidth="2*" rowsep="1"/>
         <colspec colname="c2" colwidth="1*" rowsep="1"/>
         <colspec colname="c3" colwidth="2*" rowsep="1"/>
         
         <thead>
            <row>
               <entry><para>Value of <code>xref/@xrefstyle</code></para></entry>
               <entry><para>Result</para></entry>
               <entry><para>Remark</para></entry>
            </row>
         </thead>
         
         <tbody>
            <row>
               <entry><code>template:the chapter numbered %n</code></entry>
               <entry><xref linkend="syntax-highlighting"
                  xrefstyle="template:the chapter numbered %n"/></entry>
               <entry>XSLT 1.0 Legacy Syntax</entry>
            </row>
            <row>
               <entry><code>template:the chapter called %t</code></entry>
               <entry><xref linkend="syntax-highlighting"
                  xrefstyle="template:the chapter called %t"/></entry>
               <entry>XSLT 1.0 Legacy Syntax</entry>
            </row>
         </tbody>
      </tgroup>
   </informaltable>
   <section xml:id="using-pagenumber-in-crossreferences">
      <title>Using pagenumber in cross-references</title>
      <para>The <code>%p</code> makes little sense in HTML output, since there are no page
         numbers. If you use it anyway, it will be displayed as <emphasis>"#"</emphasis>, which
         can be confusing for readers. A possible solution for this problem is the use of the
         <code>outputformat</code> attribute, that was intoduced in <xref linkend="profiling"
         /> and <xref linkend="table.effectivity-attributes" xrefstyle="%label"/><phrase
            outputformat="print"> on page <xref linkend="table.effectivity-attributes"
               xrefstyle="%p"/></phrase>.</para>
      
      <para><emphasis>This</emphasis> cross reference to <xref linkend="syntax-highlighting"
         xrefstyle="%label"/>
         <phrase outputformat="print"> on <xref linkend="syntax-highlighting" xrefstyle="page %p"
         /></phrase> will include the target`s page number only when the
         <code>@profile.outputformat</code> parameter is <emphasis>"print"</emphasis>, but
         without the annoying <emphasis>#</emphasis> in HTML.</para>
      
      <example>
         <title>Use outputformat to deal with page numbers in cross references</title>
         <programlisting>This cross reference to 
            &lt;xref linkend=&quot;syntax-highlighting&quot;  xrefstyle="%label/&gt;
            &lt;phrase outputformat=&quot;print&quot;&gt; 
            on &lt;xref linkend=&quot;syntax-highlighting&quot; xrefstyle=&quot;page %p&quot;/&gt;
            &lt;/phrase&gt;
            will reference the page number only when the @profile.outputformat parameter is print,
            but without the annoying # in HTML.</programlisting>
      </example>
   </section>
</section>
   <section xml:id="syntax-highlighting">
      <title>Syntax highlighting</title>
      <para>This section serves as <code>xref</code> target only.</para>
   </section>
</article>
