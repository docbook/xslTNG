<?xml version="1.0" encoding="utf-8"?>
<article xmlns="http://docbook.org/ns/docbook" xml:id="article" version="5.0">
   <info>
      <title>Unit Test: xref.004.xml</title>
      <titleabbrev>Unit 04</titleabbrev>

      <author>
         <personname>
            <firstname>Frank</firstname>
            <surname>Steimke</surname>
         </personname>
         <affiliation>
            <address>
               <email>fsteimke.hb@gmail.com</email>
            </address>
         </affiliation>
      </author>
   </info>

   

   <section xml:id="customize-individual-cross-references">
      <title>Customize individual cross references</title>
      
      <para>Most kinds of generated text apply across an entire document: do you want chapters
         to be numbered? Should generated text be in English or French? What form should numbered
         and unnumbered sections have? The mechanisms for changing this generated control the formatting
         of cross references.</para>
      
      <para>But it’s sometimes desirable to be able to change the format of a
         cross reference on an individual basis (that is, on the basis of the
         context in which the <emphasis>reference</emphasis> occurs, not the
         nature of what is <emphasis>referenced</emphasis>). You might, for
         example, want to shorten a cross reference to just a label if it’s
         already been referenced several times.</para>
      
      <para>Consider a cross reference to a section:
         <code><![CDATA[see <xref linkend="syntax-highlighting"/>]]></code>.
         In the localization style of this guide, that is rendered like this:
         see <xref linkend="syntax-highlighting"/>.</para>
      
      <para>The text that is generated by a cross reference can be customized
         for individual references with the <code>xrefstyle</code> attribute.
         For example, 
         <code><![CDATA[see <xref linkend="syntax-highlighting" xrefstyle="%l"/>]]></code>,
         will produce a result like this:
         see <xref linkend="syntax-highlighting" xrefstyle="%l"/>.</para>
      
      <para>You can use the <code>%c</code>, <code>%l</code> and
         <code>%p</code> values in
         <code>xrefstyle</code>. There is also an additional
         <code>%label</code> for <emphasis>the full Label</emphasis>, which is
         the component`s name and number. The use of these percent-values is
         explained in the following table, where all cross references target
         the next section called <xref linkend="syntax-highlighting"
            xrefstyle="%c"/>.</para>
      
      <informaltable frame="all">
         <tgroup cols="3" rowsep="1" colsep="1">
            <colspec colname="c1" colwidth="1*" rowsep="1"/>
            <colspec colname="c2" colwidth="1*" rowsep="1"/>
            <colspec colname="c3" colwidth="2*" rowsep="1"/>
            
            <thead valign="top">
               <row>
                  <entry>Value of <code>xref/@xrefstyle</code></entry>
                  <entry>Result</entry>
                  <entry>Remark</entry>
               </row>
            </thead>
            
            <tbody valign="top">
               <row>
                  <entry>(<code>@xrefstyle</code> is absent)</entry>
                  <entry><xref linkend="syntax-highlighting"/></entry>
                  <entry>Default</entry>
               </row>
               <row>
                  <entry><code>%c</code></entry>
                  <entry><xref linkend="syntax-highlighting" xrefstyle="%c"/></entry>
                  <entry>Content, e. g. title of target</entry>
               </row>
               <row>
                  <entry><code>%l</code></entry>
                  <entry><xref linkend="syntax-highlighting" xrefstyle="%l"/></entry>
                  <entry>Label, ususally the targets number.</entry>
               </row>
               <row>
                  <entry><code>%label</code></entry>
                  <entry><xref linkend="syntax-highlighting" xrefstyle="%label"/></entry>
                  <entry>The full Label, ususally the targets number and name.</entry>
               </row>
               <row>
                  <entry><code>%p</code></entry>
                  <entry><phrase outputformat="print"><xref linkend="syntax-highlighting" xrefstyle="%p"/></phrase></entry>
                  <entry>Page number in print output (PDF). Displayed as “#” in HTML.</entry>
               </row>
               <row>
                  <entry><code>%label (%c)</code></entry>
                  <entry><xref linkend="syntax-highlighting" xrefstyle="%label (%c)"/></entry>
                  <entry>You can use different %-letters and combine with text</entry>
               </row>
            </tbody>
         </tgroup>
      </informaltable>
      
      <bridgehead>Legacy values for xrefstyle</bridgehead>
      
      <para>In order to support migration from XSLT 1.0 Stylesheets, xslTNG supports the
         <code>template:</code> Syntax which is explained in
         “<link xmlns:xlink="http://www.w3.org/1999/xlink"
            xlink:href="http://www.sagehill.net/docbookxsl/CustomXrefs.html#usingtemplate">Customizing
            with an xrefstyle attribute / Using template:</link>” in
         the book “<citetitle>DocBook XSL: The Complete
            Guide</citetitle>”. This is summarized in the following
         table.</para>
      
      <informaltable frame="all">
         <tgroup cols="3" colsep="1" rowsep="1">
            <colspec colname="c1" colwidth="1*" rowsep="1"/>
            <colspec colname="c2" colwidth="1*" rowsep="1"/>
            <colspec colname="c3" colwidth="2*" rowsep="1"/>
            
            <thead valign="top">
               <row>
                  <entry>Value of <code>xref/@xrefstyle</code></entry>
                  <entry>Result</entry>
                  <entry>Remark</entry>
               </row>
            </thead>
            
            <tbody valign="top">
               <row>
                  <entry><code>template:the chapter numbered %n</code></entry>
                  <entry><xref linkend="syntax-highlighting"
                     xrefstyle="template:the chapter numbered %n"/></entry>
                  <entry>XSLT 1.0 Legacy Syntax</entry>
               </row>
               <row>
                  <entry><code>template:the chapter called %t</code></entry>
                  <entry><xref linkend="syntax-highlighting"
                     xrefstyle="template:the chapter called %t"/></entry>
                  <entry>XSLT 1.0 Legacy Syntax</entry>
               </row>
            </tbody>
         </tgroup>
      </informaltable>
   </section>
   
   <section xml:id="syntax-highlighting">
      <title>Syntax highlighting</title>
      
      <para>Program listings and other verbatim environments can be “syntax highlighted”,
         that is, the significant tokens in the listing can be colored differently (keywords in red,
         quoted strings in blue, that sort of thing).</para>
      
   </section>
   
</article>
